# DeltaBlue - Odoo Ansible playbook
# =================================
#
# Serves a DeltaBlue application with 2 stacks:
# 1. Python (Odoo)
# 2. PostgreSQL
#
# The Python stack is already configured to connect to PostgreSQL.
# So skip the installation PostgreSQL, hence: `odoo_install_postgresql`: False

- name: Odoo
  hosts: 127.0.0.1
  connection: local
  become: yes
  pre_tasks:
    - name: (Hack) to avoid conflict/crash on python3-serial - also installed by Odoo PypI dependencies.
      # This conflict/crash not always occurs. It depends on the host/server.
      raw: apt-get -y remove python3-serial
      changed_when: False
  roles:
    - role: cimon-io.postgresql-client
      postgresql_client_version: 12
    - role: ansible-odoo
      odoo_version: 13.0

      # SSH
      odoo_user_generate_ssh_key: True
      odoo_user_ssh_known_hosts:
        - github.com

      # PostgreSQL (on a different DeltaBlue provisioned container)
      odoo_install_postgresql: False
      odoo_config_db_host: 127.0.0.1
      # odoo_config_db_user: odoo # default odoo

      # Replaced by DeltaBlue scenario/task (DB_PASSWORD)
      # Don't change this, so search/replacement works.
      odoo_config_db_passwd: False

      # Default admin_passwd (should be replaced)        
      # odoo_config_admin_passwd: DefaultAdminPassword

      odoo_logfile: "/var/log/odoo/odoo.log"

      # Odoo Community
      odoo_repo_url: https://github.com/odoo/odoo.git
      odoo_repo_rev: 13.0

      # Odoo Enterprise
      # odoo_enterprise_repo_url:
      # odoo_enterprise_repo_rev: 13.0

      # Odoo Addons
      # odoo_addons_repo_url:
      # odoo_addons_repo_rev: 13.0

      odoo_config_addons_path:
        # - "/home/{{ odoo_user }}/odoo/enterprise"
        # - "/home/{{ odoo_user }}/odoo/addons/custom"
        # - "/home/{{ odoo_user }}/odoo/addons/external"
        - "/home/{{ odoo_user }}/odoo/server/addons"
    - role: geerlingguy.nginx
      nginx_upstreams:
        - name: odoo
          servers:
            - "127.0.0.1:8069"
        - name: odoochat
          servers:
            - "127.0.0.1:8072"
      nginx_vhosts:
        - listen: "80"
          server_name: "localhost"
          state: "present"
          filename: "odoo.conf"

          # allow upload size to 200MB
          client_max_body_size: "200M"

          # log
          access_log: "/var/log/nginx/odoo.access.log"
          error_log: "/var/log/nginx/odoo.error.log"
          extra_parameters: |
            # add headers for odoo proxy mode
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header X-Real-IP $http_x_forwarded_for;

            # set timeouts
            proxy_connect_timeout 60s;
            proxy_read_timeout 1300s;
            proxy_send_timeout 1300s;

            # redirect longpoll requests to odoo longpolling port
            location /longpolling {
              proxy_pass http://odoochat;
            }

            # cache some static files to ease the load on Odoo.
            location ~* /web/static/ {
              proxy_cache_valid 200 90m;
              proxy_buffering on;
              expires 86400;
              proxy_pass http://odoo;
            }

            # redirect requests to odoo backend server
            location / {
                proxy_pass http://odoo;
            }

            # common gzip
            gzip_types text/css text/scss text/plain text/xml application/xml application/json application/javascript;
            gzip on;
